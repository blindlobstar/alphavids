version: '3.8'
volumes:
  prometheus_data: {}

services:
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-remote-write-receiver'
    extra_hosts:
      - "host.docker.internal:host-gateway"
    configs:
      prometheus_config:
        external: true
        file: /etc/prometheus/prometheus.yml
    networks:
      - backend-network

    
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    
  replicas-exporter:
    image: sunbird/docker-service-replicas-exporter
    container_name: replicas-exporter
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: 
      - /etc/docker-service-replicas-exporter/config.yml
    configs:
      replicas_exporter_config:
        external: true
        file: /etc/docker-service-replicas-exporter/config.yml

networks:
  backend-network:
    external: true